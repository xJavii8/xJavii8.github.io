---
// Contact section component
---

<section id="contacto" class="contact-section">
	<div class="container">
		<div class="section-header fade-in">
			<h2 class="section-title gradient-text" data-en="Contact" data-es="Contacto">Contacto</h2>
			<p class="section-subtitle" data-en="Let's work together" data-es="Trabajemos juntos">Trabajemos juntos</p>
		</div>
		
		<div class="contact-content">
			<div class="contact-cards-container">
				<div class="contact-card modern-contact-card">
					<div class="card-icon">
						<svg width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
							<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"/>
							<polyline points="22,6 12,13 2,6"/>
						</svg>
					</div>
					<h3 data-en="Get in touch" data-es="Ponte en contacto">Ponte en contacto</h3>
					<p data-en="I'm always open to discussing new opportunities, interesting projects, or just having a chat about technology." data-es="Siempre estoy abierto a discutir nuevas oportunidades, proyectos interesantes, o simplemente charlar sobre tecnología.">Siempre estoy abierto a discutir nuevas oportunidades, proyectos interesantes, o simplemente charlar sobre tecnología.</p>
					
					<div class="contact-methods">
						<div class="contact-method">
							<div class="method-icon">
								<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
									<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
									<polyline points="22,6 12,13 2,6"></polyline>
								</svg>
							</div>
							<div class="method-info">
								<h4>Email</h4>
								<a href="mailto:fjaviermm.dev@gmail.com">fjaviermm.dev@gmail.com</a>
							</div>
						</div>
						
						<div class="contact-method">
						<div class="method-icon">
							<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path>
								<circle cx="12" cy="10" r="3"></circle>
							</svg>
						</div>
						<div class="method-info">
							<h4 data-en="Location" data-es="Ubicación">Ubicación</h4>
							<span data-en="Murcia, Spain" data-es="Murcia, España">Murcia, España</span>
						</div>
					</div>
					
					<div class="contact-method">
						<div class="method-icon">
							<svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
							</svg>
						</div>
						<div class="method-info">
							<h4 data-en="Phone" data-es="Teléfono">Teléfono</h4>
							<span data-en="Available upon request" data-es="Disponible a petición">Disponible a petición</span>
						</div>
					</div>
					</div>
				
				<!-- CV Download Button -->
				<div class="cv-download">
					<a href="#" id="cv-download-btn" class="social-link cv-button" target="_blank" rel="noopener noreferrer">
						<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
							<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
							<polyline points="14,2 14,8 20,8"></polyline>
							<line x1="16" y1="13" x2="8" y2="13"></line>
							<line x1="16" y1="17" x2="8" y2="17"></line>
							<polyline points="10,9 9,9 8,9"></polyline>
						</svg>
						<span data-en="Download CV" data-es="Descargar CV">Descargar CV</span>
					</a>
				</div>
				
				<div class="social-links">
					<h4 data-en="Connect with me" data-es="Conéctate conmigo">Conéctate conmigo</h4>
					
					<div class="social-grid">
						<a href="https://linkedin.com/in/fjaviermm" class="social-link" target="_blank" rel="noopener noreferrer">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path>
								<rect x="2" y="9" width="4" height="12"></rect>
								<circle cx="4" cy="4" r="2"></circle>
							</svg>
							<span>LinkedIn</span>
						</a>
						
						<a href="https://github.com/xJavii8" class="social-link" target="_blank" rel="noopener noreferrer">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>
							</svg>
							<span>GitHub</span>
						</a>
						
						<a href="mailto:fjaviermm.dev@gmail.com" class="social-link">
							<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
								<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
								<polyline points="22,6 12,13 2,6"></polyline>
							</svg>
							<span>Email</span>
						</a>
					</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>



<style>
	.contact-section {
		padding: 6rem 0;
		position: relative;
	}
	
	.section-header {
		text-align: center;
		margin-bottom: 4rem;
	}
	
	.section-title {
		font-size: clamp(2rem, 4vw, 3rem);
		font-weight: 700;
		margin-bottom: 1rem;
	}
	
	.section-subtitle {
		font-size: 1.125rem;
		color: var(--text-secondary);
	}
	
	.contact-content {
		display: flex;
		justify-content: center;
		align-items: center;
	}
	
	.contact-cards-container {
		display: flex;
		justify-content: center;
		max-width: 600px;
		width: 100%;
	}
	
	@keyframes contactFloat {
		0%, 100% { transform: translateY(0px); }
		50% { transform: translateY(-10px); }
	}
	
	.modern-contact-card {
		background: rgba(255, 255, 255, 0.05);
		border: 1px solid rgba(255, 255, 255, 0.1);
		border-radius: 20px;
		padding: 2.5rem;
		backdrop-filter: blur(10px);
		transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
		position: relative;
		overflow: hidden;
		animation: contactFloat 6s ease-in-out infinite;
		width: 100%;
		text-align: center;
	}
	
	.modern-contact-card::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		height: 3px;
		background: linear-gradient(90deg, var(--accent-color), #00a8cc, var(--accent-color));
		transform: scaleX(0);
		transition: transform 0.3s ease;
	}
	
	.modern-contact-card:hover::before {
		transform: scaleX(1);
	}
	
	.modern-contact-card:hover {
		transform: translateY(-8px) scale(1.02);
		box-shadow: 0 25px 50px rgba(0, 212, 255, 0.15);
		border-color: rgba(0, 212, 255, 0.3);
	}
	
	.card-icon {
		width: 60px;
		height: 60px;
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		border-radius: 16px;
		display: flex;
		align-items: center;
		justify-content: center;
		margin: 0 auto 1.5rem;
		color: white;
		transition: transform 0.3s ease;
	}
	
	.modern-contact-card:hover .card-icon {
		transform: scale(1.1) rotate(5deg);
	}
	
	.modern-contact-card h3 {
		font-size: 1.5rem;
		font-weight: 600;
		color: var(--text-primary);
		margin-bottom: 1rem;
	}
	
	.modern-contact-card p {
		color: var(--text-secondary);
		line-height: 1.6;
		margin-bottom: 2rem;
	}
	
	.contact-methods {
		margin-bottom: 2rem;
	}
	
	.contact-method {
		display: flex;
		align-items: center;
		gap: 1rem;
		margin-bottom: 1.5rem;
		padding: 1rem;
		border-radius: 12px;
		transition: all 0.3s ease;
	}
	
	.contact-method:hover {
		background: var(--bg-secondary);
	}
	
	.method-icon {
		width: 48px;
		height: 48px;
		border-radius: 50%;
		background: var(--gradient-primary);
		display: flex;
		align-items: center;
		justify-content: center;
		color: white;
		flex-shrink: 0;
	}
	
	.method-info {
		display: flex;
		flex-direction: column;
		justify-content: center;
		height: 48px;
		text-align: left;
	}
	
	.method-info h4 {
		font-size: 1rem;
		font-weight: 600;
		color: var(--text-primary);
		margin-bottom: 0.25rem;
		margin-top: 0;
	}
	
	.method-info a,
	.method-info span {
		color: var(--text-secondary);
		text-decoration: none;
		transition: color 0.3s ease;
	}
	
	.method-info a:hover {
		color: var(--text-accent);
	}
	
	.social-links h4 {
		font-size: 1.125rem;
		font-weight: 600;
		color: var(--text-primary);
		margin-bottom: 1rem;
	}
	
	.social-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
		gap: 1rem;
	}
	
	.social-link {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		padding: 0.75rem 1rem;
		background: var(--bg-secondary);
		border: 1px solid var(--border-color);
		border-radius: 8px;
		color: var(--text-secondary);
		text-decoration: none;
		transition: all 0.3s ease;
		font-size: 0.875rem;
	}
	
	.social-link:hover {
		background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
		color: white;
		border-color: transparent;
		transform: translateY(-2px);
	}
	

	
	@media (max-width: 768px) {
		.contact-cards-container {
			padding: 0 1rem;
		}
		
		.modern-contact-card {
			padding: 2rem 1.5rem;
		}
		
		.card-icon {
			width: 50px;
			height: 50px;
			margin-bottom: 1rem;
		}
		
		.modern-contact-card h3 {
			font-size: 1.25rem;
		}
		
		.contact-method {
			display: flex;
			align-items: center;
			gap: 1rem;
			margin-bottom: 1.5rem;
			padding: 1rem;
			border-radius: 12px;
			transition: all 0.3s ease;
		}
		
		.social-grid {
			grid-template-columns: 1fr;
			gap: 0.75rem;
		}
		
		.social-link {
			justify-content: center;
		}
	}
	
	@media (max-width: 480px) {
		.contact-section {
			padding: 3rem 0.75rem;
		}
		
		.contact-cards-container {
			padding: 0 0.25rem;
		}
		
		.modern-contact-card {
			padding: 1.25rem;
			margin: 0 0.25rem;
			border-radius: 16px;
		}
		
		.modern-contact-card h3 {
			font-size: 1.125rem;
			margin-bottom: 1rem;
			text-align: center;
		}
		
		.modern-contact-card p {
			font-size: 0.9rem;
			line-height: 1.6;
			margin-bottom: 1.5rem;
			text-align: center;
		}
		
		.contact-methods {
			gap: 1rem;
			margin-bottom: 2rem;
		}
		
		.contact-method {
			padding: 1rem;
			border-radius: 12px;
			transition: all 0.3s ease;
		}
		
		.contact-method:hover {
			transform: translateY(-2px);
		}
		
		.method-icon {
			width: 40px;
			height: 40px;
			flex-shrink: 0;
		}
		
		.method-icon svg {
			width: 18px;
			height: 18px;
		}
		
		.method-info {
			align-items: flex-start;
			text-align: left;
			justify-content: center;
			height: 40px;
		}
		
		.method-info h4 {
			font-size: 0.9rem;
			font-weight: 500;
			margin-bottom: 0.25rem;
			margin-top: 0;
		}
		
		.method-info a,
		.method-info span {
			font-size: 0.85rem;
			word-break: break-word;
			line-height: 1.3;
		}
		
		.social-links h4 {
			font-size: 1rem;
			margin-bottom: 1rem;
			text-align: center;
		}
		
		.cv-download {
			margin: 1.5rem 0;
			display: flex;
			justify-content: center;
		}
		
		.social-grid {
			grid-template-columns: repeat(2, 1fr);
			gap: 0.75rem;
			max-width: 280px;
			margin: 0 auto;
		}
		
		.social-link {
			padding: 0.75rem;
			border-radius: 10px;
			font-size: 0.8rem;
		}
		
		.social-link svg {
			width: 18px;
			height: 18px;
		}
	}
	
	/* Desktop specific spacing for CV button */
	@media (min-width: 768px) {
		.cv-download {
			margin: 2rem 0;
		}
	}
</style>

<script>
	// Function to update CV link based on current language
	function updateCVLink() {
		const cvButton = document.getElementById('cv-download-btn') as HTMLAnchorElement;
		if (!cvButton) return;
		
		// Get current language from localStorage or default to 'es'
		const currentLang = localStorage.getItem('language') || 'es';
		
		// Set CV link based on language
		if (currentLang === 'en') {
			cvButton.href = '/CV_Javi-EN-public.pdf';
		} else {
			cvButton.href = '/CV_Javi-ES-public.pdf';
		}
	}
	
	// Update CV link on page load
	document.addEventListener('DOMContentLoaded', updateCVLink);
	
	// Listen for language changes
	document.addEventListener('languageChanged', updateCVLink);
	
	// Also update when storage changes (for cross-tab sync)
	window.addEventListener('storage', function(e) {
		if (e.key === 'language') {
			updateCVLink();
		}
	});
</script>